dnl ###
dnl ### NSC -- BIND Config File Builder
dnl ### (c) 1997--2011 Martin Mares <mj@ucw.cz>
dnl ###
include(m4/dnslib.m4)

# Definition of primary domains

define(`DO_PRIMARY', `dnl
zone "$1" in {
	type master;
	file "ZONEDIR/nsc_gen_zone_fn($1)";
ZZ_DNSSEC_OPTIONS()dnl
ZZ_OPTIONS()dnl
};
')

define(`PRIMARY', `DO_PRIMARY($1)')
define(`REVERSE', `DO_PRIMARY(REV($1))')

# Definition of secondary domain

define(`SECONDARY', `dnl
zone "$1" in {
	type slave;
	file "BAKDIR/nsc_gen_zone_fn($1)";
	masters { $2; };
ZZ_OPTIONS()dnl
};
')

# Definition of a forwarding zone

define(`FORWard', `patsubst(`$*',`,',`; ')')
define(`FORWARDING', `dnl
zone "$1" in {
	type forward;
	forward only;
	forwarders { FORWard(shift($@),)};
ZZ_OPTIONS()dnl
};
')

# Blackhole zones

define(`BLACKHOLE', `dnl
zone "$1" in {
	type master;
	file "ZONEDIR/blackhole";
};
')

# Root hint zone

define(`ROOTHINT', `dnl
zone "." in {
	type hint;
	file "ROOTCACHE";
};
')

# Manual insertion of config file material

define(`CONFIG', `$1')

# Setting domain options

define(`ZZ_OPTIONS', `')

define(`ZONE_OPTIONS', `define(`ZZ_OPTIONS', ifelse(`$1',`',`',``	$1''))')

# DNSSEC zone options

define(`ZZ_DNSSEC_OPTIONS', `')

# Wrapper for DNSSEC auto-dnssec maintain & inline-signing

define(`DNSSEC_MAINTAIN', `dnl
pushdef(`ZZ_DNSSEC_OPTIONS', `dnl
	auto-dnssec maintain;
	inline-signing yes;
'defn(`ZZ_DNSSEC_OPTIONS'))$1popdef(`ZZ_DNSSEC_OPTIONS')dnl
')

# Wrapper for dnssec-policy

define(`DNSSEC_POLICY', `dnl
pushdef(`ZZ_DNSSEC_OPTIONS', `dnl
	dnssec-policy $1;
	inline-signing yes;
'defn(`ZZ_DNSSEC_OPTIONS'))$2popdef(`ZZ_DNSSEC_OPTIONS')dnl
')

# Views

define(`unindent', `patsubst(`$1', `^[ \t]*', `')')

define(`VIEW', `define(`VIEWNAME', `$1')
view "$1" {

patsubst(nsc_quote(unindent(`$2')), `^.', `	\&')dnl
};
')


# The preamble

divert(0)dnl
`#'
`#'	BIND configuration file
`#'	Generated by NSCVER (mkconf.m4) on CURRENT_DATE
`#'	Please don't edit manually
`#'

